services:
 redis:
  image: redis:7.4
  restart: unless-stopped
  ports:
   - "127.0.0.1:6379:6379"
  command: redis-server /usr/local/etc/redis/redis.conf
  volumes:
   - ./configs/redis.conf:/usr/local/etc/redis/redis.conf
  ulimits:
   nproc: 65535
   nofile:
    soft: 65535
    hard: 65535
  deploy:
   resources:
    limits:
     cpus: "4"
     memory: 25G
    reservations:
     cpus: "2"
     memory: 4G
  networks:
   - default

 nirn:
  image: ghcr.io/germanoeich/nirn-proxy:v1.3.3
  restart: unless-stopped
  environment:
   REQUEST_TIMEOUT: 15000
  ports:
   - "127.0.0.1:8080:8080"
  networks:
   - default

 grafana:
  build:
   context: .
   dockerfile: dockerfiles/grafana.Dockerfile
  restart: unless-stopped
  volumes:
   - grafana:/var/lib/grafana
  environment:
   - GF_SECURITY_ADMIN_PASSWORD=admin
   - GF_SECURITY_ADMIN_USER=admin
  ports:
   - "127.0.0.1:3000:3000"
  networks:
   - default

 prometheus:
  build:
   context: .
   dockerfile: dockerfiles/prometheus.Dockerfile
  restart: unless-stopped
  command:
   - "--config.file=/etc/prometheus/prometheus.yml"
   - "--storage.tsdb.path=/prometheus"
   - "--web.enable-admin-api"
   - "--web.enable-lifecycle"
   - "--web.enable-remote-write-receiver"
  ports:
   - "127.0.0.1:9090:9090"
  volumes:
   - prometheus:/prometheus
  networks:
   - default

 redis-exporter:
  image: oliver006/redis_exporter:latest
  restart: unless-stopped
  environment:
   REDIS_ADDR: redis://redis:6379
  ports:
   - "127.0.0.1:9121:9121"
  depends_on:
   - redis
  networks:
   - default

volumes:
 grafana:
 prometheus:
 grafana_provisioning:

networks:
 default:
  driver: bridge
